#1. Поработайте с переменными, создайте несколько, выведите на экран. Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.
a = input('введите число: ')
b = input('введите строку: ')
c, d = [i for i in input('введите два числа через пробел: ').split()] #это для расширения кругозора

print('это число:', int(a) if a.isdigit() else 'ты ввел не число')
print('это строка:', b)
print('это список:', list(range(int(c),int(d))) if c.isdigit() and d.isdigit() else 'это не числа')

#2. Пользователь вводит время в секундах. Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс. Используйте форматирование строк.

c = input('введите количество секунд: ')
a = [0, 0, int(c) if c.isdigit() else 'no']
if a[2] != 'no':
  if a[2] > 60:
    a[1] = a[2] // 60
    a[2] = a[2] % 60
    if a[1] > 60:
      a[0] = a[1] // 60
      a[1] = a[1] % 60
    print(a[0],':',a[1],':',a[2], sep = '')
else:
  print('неверно ввел')

#3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

c = input('введи число: ')
print(sum([int(c), int(c*2), int(c*3)]) if c.isdigit() else 'ну неее')

#4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.

c = input('введи целое положительное число: ')
c = c if c.isdigit() else 'no'
ma = 0
ch = 0
if c != 'no':
  while ch != len(c):
    if int(c[ch]) > ma:
      ma =  int(c[ch])
    ch += 1

print(ma)

#Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом
#работает фирма. Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки.
#Выведите соответствующее сообщение.


v = input('сколько заработали? ')
revenue = int(v) if v.isdigit() else 'no'
v = input('а сколько потратили? ')
costs = int(v) if v.isdigit() else 'no'
if revenue != 'no' and costs != 'no':
  if revenue > costs:
    print('Ну нормуль, у тебя прибыль:', revenue - costs, '(+' + str(round((revenue - costs)/costs*100, 2)),'%)') #формат не использую поэтому так
  else:
    print('Увы, но ты понес убыток:', revenue - costs, '(' + str(round((revenue - costs)/costs*100, 2)),'%)')
else:
  revenue = 0
  costs = 0
  print('чото не то ввел')
#6. Если фирма отработала с прибылью, вычислите рентабельность выручки. Это отношение прибыли к выручке.
#Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.

if revenue > costs:
  print('рентабельность выручки:', revenue - costs, '(+' + str(round((revenue - costs)/costs*100, 2)),'%)')
  a = input('а сколько в фирме сотрудников?')
  a = int(a) if a.isdigit() else 'no'
  if a != 'no':
    print('прибыль фирмы в расчёте на одного сотрудника составила', (revenue - costs)/a)
  else:
    print('столько не бывает, ты гдето ошибся')

#7. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день спортсмен увеличивал результат на 10% относительно предыдущего. Требуется определить номер дня, на который результат спортсмена составит не менее b километров. Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
#Например: a = 2, b = 3.
#Результат:
#1-й день: 2
#2-й день: 2,2
#3-й день: 2,42
#4-й день: 2,66
#5-й день: 2,93
#6-й день: 3,22
#Ответ: на шестой день спортсмен достиг результата — не менее 3 км.

v = input('результат в 1 день? ')
f = int(v) if v.isdigit() else 'no'
v = input('какой результат нужен? ')
agility = int(v) if v.isdigit() else 'no'

pr = 0.1
day_count =1

print('\n' + str(day_count) + '-й день:', f)
while agility > f:
  day_count += 1
  f = f + f*pr
  print(str(day_count) + '-й день:', round(f,2))
print('Ответ: на шестой день спортсмен достиг результата — не менее', agility, 'км.')

3
